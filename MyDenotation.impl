IMPLEMENTATION MyDenotation

-- Reverses a denotation
-- @param: Denotation to be reversed
-- @return: Reversed denotation
DEF reverse == \\str.
        IF ( #(str) > 0 ) THEN
        slice(str,#(str)-1,#(str)-1) ++ reverse(delete(str, #(str)-1,#(str)-1))
        ELSE ""
        FI

-- Replaces a character in a denotation
-- @param: Denotation in which characters will be replaced
-- @param: Char to search
-- @param: Char to replace with
-- @return: Denotation with replaced characters
DEF replaceChar == \\str, search, replace.
	IF ( search = replace) THEN str

	IF ( #(str) > 0 ) THEN
		IF ( !(slice(str,0,0)) = search ) THEN %(replace) ++ replaceChar(delete(str,0,0),search,replace)
		ELSE slice(str,0,0) ++ replaceChar(delete(str,0,0),search,replace)
		FI
	ELSE ""
	FI


DEF findChar == \\str, charfind.
	findCharRek(str,charfind,1)

-- Helper function for rekursive findChar
FUN findCharRek : denotation ** char ** nat -> nat
DEF findCharRek == \\str, charfind, curpos.
	IF ( #(str) > 0) THEN
                IF ( !(slice(str,0,0)) = charfind ) THEN curpos
		ELSE findCharRek(delete(str,0,0),charfind,(curpos+1))
		FI
        ELSE 0
        FI


